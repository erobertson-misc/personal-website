{"version":3,"sources":["Colors.ts","components/Header.tsx","components/ResumeHeader.tsx","components/ResumeItem.tsx","components/ResumeBody.tsx","components/TechExpierience.tsx","components/Breakup.tsx","components/Expierience.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","fontSize","fontWeight","paddingTop","paddingLeft","root","width","height","background","Colors","links","position","right","paddingRight","top","textAlign","style","head","portrait","left","title","subtitle","borderBottom","information","lineHeight","img","borderRadius","borderBottomRightRadius","borderBottomLeftRadius","marginBottom","src","imgContainer","text","date","bottom","props","setHover","hover","setState","state","onMouseEnter","this","onMouseLeave","padding","cursor","color","border","onClick","window","location","href","link","description","Component","display","margin","children","Breakup","TechExpierience","x","innerWidth","marginLeft","Header","ResumeHeader","Expierience","ResumeBody","Boolean","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uKAAe,G,MACH,WADG,EAEF,UAFE,EAGJ,UCCPA,EAAO,CACPC,SAAW,GACXC,WAAY,IACZC,WAAY,GACZC,YAAa,IAEbC,EAAO,CACPC,MAAQ,OACRC,OAAQ,GACRC,WAAaC,GAEbC,EAAwB,CACxBC,SAAW,WACXC,MAAO,EACPT,WAAY,GACZU,aAAc,GACdC,IAAM,EACNb,SAAW,GACXc,UAAW,QACXb,WAAY,KAGD,aACX,OACI,yBAAKc,MAAOX,GACR,yBAAKW,MAAOhB,GAAZ,kBAGA,yBAAKgB,MAAON,GAAZ,8BC7BRO,EAAuB,CACvBN,SAAU,WACVL,MAAO,OACPC,OAAQ,KAERW,EAA2B,CAC3BP,SAAU,WACVG,IAAK,GACLK,KAAO,GACPb,MAAO,IACPC,OAAQ,KAERa,EAAwB,CACxBT,SAAU,WACVG,IAAK,GACLK,KAAO,IACPb,MAAO,IACPC,OAAQ,IACRN,SAAU,GACVC,WAAY,IACZa,UAAW,QAEXM,EAA2B,CAC3BV,SAAU,WACVG,IAAK,IACLK,KAAO,IACPb,MAAO,IACPC,OAAQ,GACRN,SAAU,GACVC,WAAY,IACZa,UAAW,OACXO,aAAc,aAEdC,EAA8B,CAC9BZ,SAAU,WACVG,IAAK,IACLK,KAAO,IACPb,MAAO,IACPC,OAAQ,IACRN,SAAU,GACVc,UAAW,OACXb,WAAY,IACZsB,WAAY,GAGZC,EAAM,CACNnB,MAAQ,OACRC,OAAS,OACTmB,aAAc,GAEdrB,EAAsB,CACtBC,MAAO,OACPQ,IAAK,GACLN,WAAYC,EACZkB,wBAAyB,EACzBC,uBAAwB,EACxBC,aAAc,IAGH,aACX,OACI,yBAAKb,MAAOX,GAER,yBAAKW,MAAOC,GACR,yBAAKD,MAAOE,GACR,yBAAKF,MAAOS,EAAKK,IAAI,oBAEzB,yBAAKd,MAAOI,GAAZ,kBAGA,yBAAKJ,MAAOK,GAAZ,qBAGA,yBAAKL,MAAOO,GAAZ,oCACqC,6BADrC,WAEY,6BAFZ,gCAGiC,6BAHjC,wCAIyC,iC,4BC9DrDE,EAAM,CACNnB,MAAO,KAEPyB,EAAe,GAEfC,EAAsB,CACtBrB,SAAU,WACVQ,KAAO,IACPL,IAAK,GACLP,OAAQ,IACRD,MAAO,sBAEP2B,EAAuB,CACvBtB,SAAU,WACVuB,OAAQ,EACRtB,MAAO,EACPG,UAAW,S,oDASX,WAAoBoB,GAAiB,IAAD,8BAChC,cAAOA,IADSA,QAAgB,EAKpCC,SAAW,SAAEC,GAAF,OAAuB,WAC9B,EAAKC,SAAS,CAACD,YAJf,EAAKE,MAAQ,CAAEF,OAAQ,GAFS,E,qDASzB,IAjDHA,EAiDE,OACN,OACI,yBACIG,aAAcC,KAAKL,UAAS,GAC5BM,aAAcD,KAAKL,UAAS,GAC5BpB,OAtDJqB,EAsDgBI,KAAKF,MAAMF,MArDR,CACvBR,aAAc,GACdlB,SAAU,WACVL,MAAO,oBACPqC,QAAS,GACTjB,aAAc,EACdnB,OAAQ,IACRqC,OAAQ,UACRC,MAAOR,EAAQ5B,EAAe,QAC9BD,WAAY6B,EAAQ5B,EAAcA,EAClCqC,OAAa,oBAALT,EAAqB5B,EAA+BA,KA4CpDsC,QAAS,kBAAIC,OAAOC,SAASC,KAAO,EAAKf,MAAMgB,OAE/C,yBAAKnC,MAAOe,GACR,yBAAKD,IAAKW,KAAKN,MAAMV,IAAKT,MAAOS,KAErC,yBAAKT,MAAOgB,GACR,yBAAKhB,MAAO,CAACf,SAAU,GAAIC,WAAY,IAAK2B,aAAc,KACrDY,KAAKN,MAAMf,OAEhB,yBAAKJ,MAAO,CAACf,SAAU,GAAIC,WAAY,IAAK2B,aAAc,KACrDY,KAAKN,MAAMiB,aAEhB,yBAAKpC,MAAOiB,GACPQ,KAAKN,MAAMF,Y,GA9BPoB,aCrCzBhD,EAAsB,CACtBC,MAAO,OACPoB,aAAc,GAIH,aACX,OACI,yBAAKV,MAAOX,GACR,kBAAC,EAAD,CACIoB,IAAK,0DACLL,MAAO,kCACPgC,YAAa,2NACbD,KAAM,mCACNlB,KAAM,SAEV,kBAAC,EAAD,CACIR,IAAK,wEACLL,MAAO,uDACPgC,YAAa,yJACbD,KAAM,4BACNlB,KAAM,SAEV,kBAAC,EAAD,CACIR,IAAK,4HACLL,MAAO,+CACPgC,YAAa,sHACbD,KAAM,gCACNlB,KAAM,SAEV,kBAAC,EAAD,CACIR,IAAK,uEACLL,MAAO,gEACPgC,YAAa,oMACbD,KAAM,+DACNlB,KAAM,SAEV,kBAAC,EAAD,CACIR,IAAK,6DACLL,MAAO,mDACPgC,YAAa,oMACbD,KAAM,iGACNlB,KAAM,SAEV,kBAAC,EAAD,CACIR,IAAK,qGACLL,MAAO,cACPgC,YAAa,kLACbD,KAAM,gDACNlB,KAAM,WClDlBjB,EAAQ,CACR2B,QAAS,WACTjB,aAAc,EACdlB,WAAYC,EACZoC,MAAOpC,EACP6C,QAAS,eACTC,OAAQ,EACRrD,WAAY,KAGD,WAAWiC,GACtB,OACI,yBAAKnB,MAAOA,GACPmB,EAAMnC,OCbfgB,EAAQ,CACR2B,QAAS,WACTjB,aAAc,EACdlB,WAAYC,EACZoC,MAAOpC,EACP6C,QAAS,eACTC,OAAQ,EACRrD,WAAY,KAGD,WAAWiC,GACtB,OACI,yBAAKnB,MAAOA,GACPmB,EAAMnC,KACP,yBAAKgB,MAAO,CAACsC,QAAQ,eAAgB/C,OAAQ,GAAIgD,OAAQ,YAAzD,KACCpB,EAAMqB,WCbfnD,EAAsB,CAClBwB,aAAc,GACdlB,SAAU,WACVL,MAAO,oBACPqC,QAAS,GACTjB,aAAc,EACdnB,OAAQ,IACRqC,OAAQ,UACRpC,WAAYC,GAwBL,aACX,OACI,yBAAKO,MAAOX,GAER,yBAAKW,MAAO,CAACf,SAAU,GAAIC,WAAY,IAAK2B,aAAc,KAA1D,oCAGA,yBAAKb,MAAO,CAACf,SAAU,GAAIC,WAAY,IAAK2B,aAAc,KACtD,kBAAC4B,EAAD,CAASzD,KAAK,OACV,kBAAC0D,EAAD,CAAiB1D,KAAK,eACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,UACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,YACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,cACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,oBAE1B,kBAACyD,EAAD,CAASzD,KAAK,MACV,kBAAC0D,EAAD,CAAiB1D,KAAK,WACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,UACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,aAE1B,kBAACyD,EAAD,CAASzD,KAAK,UACV,kBAAC0D,EAAD,CAAiB1D,KAAK,YACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,UACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,UACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,QACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,aAE1B,kBAACyD,EAAD,CAASzD,KAAK,UACV,kBAAC0D,EAAD,CAAiB1D,KAAK,iBACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,YACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,WAE1B,kBAACyD,EAAD,CAASzD,KAAK,SACV,kBAAC0D,EAAD,CAAiB1D,KAAK,UACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,aACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,sBAE1B,kBAACyD,EAAD,CAASzD,KAAK,SACV,kBAAC0D,EAAD,CAAiB1D,KAAK,SACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,WACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,SACtB,kBAAC0D,EAAD,CAAiB1D,KAAK,aCtE3B,aAEX,IAAI2D,EAAIX,OAAOY,WAAa,IAAOZ,OAAOY,WAAa,IACnDvD,EAAuB,CACvBC,MAAOqD,EACPE,WAAU,qBAAiBF,EAAE,EAAnB,OACVhD,SAAU,YAGd,OACI,yBAAKK,MAAOX,GACR,kBAACyD,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,QCVQC,QACW,cAA7BlB,OAAOC,SAASkB,UAEe,UAA7BnB,OAAOC,SAASkB,UAEhBnB,OAAOC,SAASkB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.622bc49f.chunk.js","sourcesContent":["export default {\r\n    light : '#FCE4D5',\r\n    medium : '#D98474',\r\n    dark : '#2D3142'\r\n}","import React, { CSSProperties } from 'react'\r\nimport Colors from '../Colors'\r\nimport HeaderLink from './HeaderLink'\r\n\r\nlet name = {\r\n    fontSize : 30,\r\n    fontWeight: 800,\r\n    paddingTop: 10,\r\n    paddingLeft: 30,\r\n}\r\nlet root = {\r\n    width : '100%',\r\n    height: 60,\r\n    background : Colors.medium\r\n}\r\nlet links : CSSProperties = {\r\n    position : 'absolute',\r\n    right: 0,\r\n    paddingTop: 10,\r\n    paddingRight: 30,\r\n    top : 0,\r\n    fontSize : 30,\r\n    textAlign: 'right',\r\n    fontWeight: 800,\r\n}\r\n\r\nexport default function () {\r\n    return (\r\n        <div style={root}> \r\n            <div style={name}>\r\n                Eric Robertson\r\n            </div>\r\n            <div style={links}>\r\n                e.robertson.js@gmail.com\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, {CSSProperties} from 'react';\r\nimport Colors from '../Colors'\r\n\r\nlet head : CSSProperties = {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 340,\r\n}\r\nlet portrait : CSSProperties = {\r\n    position: 'absolute',\r\n    top: 20,\r\n    left : 20,\r\n    width: 300,\r\n    height: 300,\r\n}\r\nlet title : CSSProperties = {\r\n    position: 'absolute',\r\n    top: 50,\r\n    left : 400,\r\n    width: 450,\r\n    height: 100,\r\n    fontSize: 50,\r\n    fontWeight: 800,\r\n    textAlign: 'left'\r\n}\r\nlet subtitle : CSSProperties = {\r\n    position: 'absolute',\r\n    top: 120,\r\n    left : 400,\r\n    width: 450,\r\n    height: 40,\r\n    fontSize: 20,\r\n    fontWeight: 500,\r\n    textAlign: 'left',\r\n    borderBottom: '1px solid'\r\n}\r\nlet information : CSSProperties = {\r\n    position: 'absolute',\r\n    top: 170,\r\n    left : 400,\r\n    width: 450,\r\n    height: 150,\r\n    fontSize: 15,\r\n    textAlign: 'left',\r\n    fontWeight: 400,\r\n    lineHeight: 2,\r\n}\r\n\r\nlet img = { \r\n    width : '100%', \r\n    height : '100%',\r\n    borderRadius: 5,\r\n}\r\nlet root: CSSProperties = {\r\n    width: '100%',\r\n    top: 60,\r\n    background: Colors.light,\r\n    borderBottomRightRadius: 5,\r\n    borderBottomLeftRadius: 5,\r\n    marginBottom: 10,\r\n}\r\n\r\nexport default function () {\r\n    return (\r\n        <div style={root}>\r\n\r\n            <div style={head}>\r\n                <div style={portrait}>\r\n                    <img style={img} src='./portrait.jpg' />\r\n                </div>\r\n                <div style={title}>\r\n                    Eric Robertson\r\n                </div>\r\n                <div style={subtitle}>\r\n                    Software Engineer\r\n                </div>\r\n                <div style={information} >\r\n                    Junior at University of Maryland <br/>\r\n                    3.8 GPA <br/>\r\n                    10+ Years coding expierience <br/>\r\n                    Open to contracting work of any kind <br/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {CSSProperties, Component} from 'react';\r\nimport Colors from '../Colors'\r\n\r\nlet root = (hover:boolean) => {\r\n    let data : CSSProperties = {\r\n        marginBottom: 10,\r\n        position: 'relative',\r\n        width: 'calc(100% - 42px)',\r\n        padding: 20,\r\n        borderRadius: 5,\r\n        height: 150,\r\n        cursor: 'pointer',\r\n        color: hover ? Colors.light : 'black',\r\n        background: hover ? Colors.dark : Colors.light,\r\n        border: hover ? `2px solid ${Colors.medium}` : `2px solid ${Colors.light}`\r\n    }\r\n    return data;\r\n}\r\nlet img = {\r\n    width: 150,\r\n}\r\nlet imgContainer = {}\r\n\r\nlet text : CSSProperties= {\r\n    position: 'absolute',\r\n    left : 200,\r\n    top: 20,\r\n    height: 150,\r\n    width: 'calc(100% - 240px)'\r\n}\r\nlet date : CSSProperties = {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n    textAlign: 'right',\r\n}\r\n\r\ninterface Props { img : string, title : string, description : string, link : string, date : string }\r\ninterface State { hover : boolean }\r\n\r\n\r\nexport default class extends Component <Props,State> {\r\n\r\n    constructor (public props : Props ) {\r\n        super( props );\r\n        this.state = { hover : false }\r\n    }\r\n\r\n    setHover = ( hover : boolean ) => () => {\r\n        this.setState({hover})\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div \r\n                onMouseEnter={this.setHover(true)} \r\n                onMouseLeave={this.setHover(false)}\r\n                style={root(this.state.hover)} \r\n                onClick={()=>window.location.href = this.props.link}> \r\n\r\n                <div style={imgContainer}>\r\n                    <img src={this.props.img} style={img} />\r\n                </div>\r\n                <div style={text}>\r\n                    <div style={{fontSize: 25, fontWeight: 600, marginBottom: 10 }}>\r\n                        {this.props.title}\r\n                    </div>\r\n                    <div style={{fontSize: 15, fontWeight: 300, marginBottom: 10 }}>\r\n                        {this.props.description}\r\n                    </div>\r\n                    <div style={date}>\r\n                        {this.props.date}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {CSSProperties} from 'react';\r\nimport Colors from '../Colors'\r\nimport ResumeItem from './ResumeItem';\r\n\r\nlet root: CSSProperties = {\r\n    width: '100%',\r\n    borderRadius: 5,\r\n}\r\n\r\n\r\nexport default function () {\r\n    return (\r\n        <div style={root}> \r\n            <ResumeItem\r\n                img={\"https://www.opensourceryumd.com/assets/images/Badge.png\"}\r\n                title={\"Co-Founder of Open Sourcery UMD\"}\r\n                description={\"Diverse UMD computer science organization that hosts dozens of workshops a year and enables members to pursue passion projects. Hundreds of registered members and over a dozen members present at each weekly workshop.\"}\r\n                link={\"https://www.opensourceryumd.com/\"}\r\n                date={\"2019\"}\r\n            />\r\n            <ResumeItem\r\n                img={\"https://media.glassdoor.com/o/314669/trifecta-technologies-office.jpg\"}\r\n                title={\"Web development intern for local development company\"}\r\n                description={\"Worked on a team deploying city-wide network of internet-of-things bluetooth beacons and helped develop and design an acompaning ionic full stack app.\"}\r\n                link={\"https://www.trifecta.com/\"}\r\n                date={\"2019\"}\r\n            />\r\n            <ResumeItem\r\n                img={\"https://d28htnjz2elwuj.cloudfront.net/wp-content/uploads/2019/04/11144035/University-of-Maryland-College-Park-400x400.jpg\"}\r\n                title={\"First-Year Innovation & Research Experience \"}\r\n                description={\"Implemented modern python machine image classification models using siam-networks and convolutional neural networks\"}\r\n                link={\"https://www.fire.umd.edu/coml\"}\r\n                date={\"2019\"}\r\n            />\r\n            <ResumeItem\r\n                img={\"https://www.spigotmc.org/data/resource_icons/78/78759.jpg?1589327028\"}\r\n                title={\"Minecraft Spogit plugin implementing dynamic price management\"}\r\n                description={\"Mineacft server plugin that creats a global dynamic shop that adjusts to player actions to change prices dynamicly. Taking into account recipies and activity, prices will fluxuate in real time.\"}\r\n                link={\"https://www.spigotmc.org/resources/dynamic-market-2-0.78759/\"}\r\n                date={\"2020\"}\r\n            />\r\n            <ResumeItem\r\n                img={\"https://avatars3.githubusercontent.com/u/55065495?s=60&v=4\"}\r\n                title={\"Data Science workshop presented at OpenSourcery \"}\r\n                description={\"Introductory data science workshop that created for Open Sourcery UMD. Explores some basic relationships between employment data and other social factors pulling from glassdoors open datasets. \"}\r\n                link={\"https://github.com/eric-robertson/data-science-employment/blob/master/DataWorkshop%20(3).ipynb\"}\r\n                date={\"2020\"}\r\n            />\r\n            <ResumeItem\r\n                img={\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Parse-tree.svg/1200px-Parse-tree.svg.png\"}\r\n                title={\"Omni-Parser\"}\r\n                description={\"Node project that allows the user to quickly define a custom language and compile instructions and then generates a compiler for the custom language that can be used on files.\"}\r\n                link={\"https://github.com/eric-robertson/omni-parser\"}\r\n                date={\"2020\"}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {CSSProperties, Component} from 'react';\r\nimport Colors from '../Colors'\r\n\r\nlet style = {\r\n    padding: '3px 10px',\r\n    borderRadius: 5,\r\n    background: Colors.dark,\r\n    color: Colors.light,\r\n    display: 'inline-block',\r\n    margin: 5,\r\n    fontWeight: 400,\r\n}\r\n\r\nexport default function ( props : { name : string}) {\r\n    return (\r\n        <div style={style}>\r\n            {props.name} \r\n        </div>\r\n    )\r\n}","import React, {CSSProperties, Component} from 'react';\r\nimport Colors from '../Colors'\r\n\r\nlet style = {\r\n    padding: '3px 10px',\r\n    borderRadius: 5,\r\n    background: Colors.medium,\r\n    color: Colors.dark,\r\n    display: 'inline-block',\r\n    margin: 5,\r\n    fontWeight: 800,\r\n}\r\n\r\nexport default function ( props : { name : string, children : any}) {\r\n    return (\r\n        <div style={style}>\r\n            {props.name}  \r\n            <div style={{display:'inline-block', height: 10, margin: '0px 5px'}}> </div> \r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React, {CSSProperties, Component} from 'react';\r\nimport Colors from '../Colors'\r\nimport TechExpierience from './TechExpierience';\r\nimport Breakup from './Breakup';\r\n\r\nlet root : CSSProperties= {\r\n        marginBottom: 10,\r\n        position: 'relative',\r\n        width: 'calc(100% - 40px)',\r\n        padding: 20,\r\n        borderRadius: 5,\r\n        height: 200,\r\n        cursor: 'pointer',\r\n        background: Colors.light\r\n}\r\nlet img = {\r\n    width: 150,\r\n    height : 150,\r\n}\r\nlet imgContainer = {}\r\n\r\nlet text : CSSProperties= {\r\n    position: 'absolute',\r\n    left : 200,\r\n    top: 20,\r\n    height: 150,\r\n    width: 'calc(100% - 240px)'\r\n}\r\nlet date : CSSProperties = {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n    textAlign: 'right',\r\n}\r\n\r\n\r\n\r\nexport default function(){\r\n    return (\r\n        <div style={root} > \r\n\r\n            <div style={{fontSize: 25, fontWeight: 600, marginBottom: 10 }}>\r\n                Expierience in many technologies\r\n            </div>\r\n            <div style={{fontSize: 15, fontWeight: 600, marginBottom: 10 }}>\r\n                <Breakup name=\"Web\">\r\n                    <TechExpierience name=\"Typescript\"/>\r\n                    <TechExpierience name=\"React\"/>\r\n                    <TechExpierience name=\"Angular\"/>\r\n                    <TechExpierience name=\"Socket.io\"/>\r\n                    <TechExpierience name=\"Beautiful Soup\"/>\r\n                </Breakup>\r\n                <Breakup name=\"AI\">\r\n                    <TechExpierience name=\"Python\"/>\r\n                    <TechExpierience name=\"Keras\"/>\r\n                    <TechExpierience name=\"Jupyter\"/>\r\n                </Breakup>\r\n                <Breakup name=\"Server\">\r\n                    <TechExpierience name=\"Node.js\"/>\r\n                    <TechExpierience name=\"Linux\"/>\r\n                    <TechExpierience name=\"Mongo\"/>\r\n                    <TechExpierience name=\"AWS\"/>\r\n                    <TechExpierience name=\"Express\"/>\r\n                </Breakup>\r\n                <Breakup name=\"Mobile\">\r\n                    <TechExpierience name=\"React-Native\"/>\r\n                    <TechExpierience name=\"Cordova\"/>\r\n                    <TechExpierience name=\"Ionic\"/>\r\n                </Breakup>\r\n                <Breakup name=\"Games\">\r\n                    <TechExpierience name=\"Unity\"/>\r\n                    <TechExpierience name=\"Three.js\"/>\r\n                    <TechExpierience name=\"Minecraft Spigot\"/>\r\n                </Breakup>\r\n                <Breakup name=\"Other\">\r\n                    <TechExpierience name=\"Java\"/>\r\n                    <TechExpierience name=\"O-Caml\"/>\r\n                    <TechExpierience name=\"Bash\"/>\r\n                    <TechExpierience name=\"Ruby\"/>\r\n                </Breakup>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { CSSProperties } from 'react';\n\nimport Header from './components/Header'\nimport ResumeHeader from './components/ResumeHeader';\nimport ResumeBody from './components/ResumeBody';\nimport Expierience from './components/Expierience';\n\n\nexport default function () {\n    \n    let x = window.innerWidth < 1000 ? window.innerWidth : 1000\n    let root : CSSProperties = {\n        width: x,\n        marginLeft : `calc(50% - ${x/2}px)`,\n        position: 'relative'\n    }\n\n    return (\n        <div style={root}>\n            <Header />\n            <ResumeHeader />\n            <Expierience />\n            <ResumeBody />\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}